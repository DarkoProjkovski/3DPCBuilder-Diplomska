/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 HPV8GBDDR4.glb 
*/

import React, { Suspense, useRef } from 'react'
import { OrbitControls, useGLTF } from '@react-three/drei'
import { Canvas } from '@react-three/fiber'
import {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass'
import {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer'

const HPV8GBDDR4=(props)=> {
  const { nodes, materials } = useGLTF('/pc_parts/ram/HPV8GBDDR4.glb')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube303.geometry} material={materials['HP 8GB RAM frontside']} />
      <mesh geometry={nodes.Cube303_1.geometry} material={materials['HP 8GB RAM backside']} />
      <mesh geometry={nodes.Cube303_2.geometry} material={materials.RGB} />
      <mesh geometry={nodes.Cube303_3.geometry} material={materials.MaterialRGB} />
    </group>
  )
}

const HPV8GBDDR4Canvas =()=>{
  return(
    <Canvas
      camera={{fov: 4.5}}>
      <Suspense>
        <ambientLight intensity={2} color={"white"}/>
        <OrbitControls/>
        <HPV8GBDDR4 position-y={-0.03}/>
      </Suspense>
    </Canvas>
  )
}

useGLTF.preload('/pc_parts/ram/HPV8GBDDR4.glb')

export default HPV8GBDDR4Canvas