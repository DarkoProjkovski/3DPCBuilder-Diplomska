/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 NvidiaGeForceRTX3090.glb 
*/

import React, { Suspense, useRef } from 'react'
import { OrbitControls, useGLTF } from '@react-three/drei'
import { Canvas } from '@react-three/fiber'

const NvidiaGeForceRTX3090=(props)=> {
  const { nodes, materials } = useGLTF('/pc_parts/graphic_cards/NvidiaGeForceRTX3090.glb')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.NvidiaGeForceRTX3090_1.geometry} material={materials['RTX3090 front']} />
      <mesh geometry={nodes.NvidiaGeForceRTX3090_2.geometry} material={materials.RTX3090top} />
      <mesh geometry={nodes.NvidiaGeForceRTX3090_3.geometry} material={materials.RTX3090back} />
      <mesh geometry={nodes.NvidiaGeForceRTX3090_4.geometry} material={materials.RTX3090bottom} />
      <mesh geometry={nodes.NvidiaGeForceRTX3090_5.geometry} material={materials.darkgrey} />
      <mesh geometry={nodes.NvidiaGeForceRTX3090_6.geometry} material={materials.MetallicGrey} />
      <mesh geometry={nodes.NvidiaGeForceRTX3090_7.geometry} material={materials['Material.002']} />
    </group>
  )
}

const RTX3090Canvas = () =>{
  return(
    <Canvas
      camera={{fov: 15}}>
      <Suspense>
        <ambientLight intensity={2} color={"white"}/>
        <OrbitControls/>
        <NvidiaGeForceRTX3090/>
      </Suspense>
    </Canvas>
  )
}

useGLTF.preload('/pc_parts/graphic_cards/NvidiaGeForceRTX3090.glb')

export default RTX3090Canvas
