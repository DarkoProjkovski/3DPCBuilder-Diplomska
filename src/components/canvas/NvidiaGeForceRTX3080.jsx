/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 NvidiaGeForceRTX3080.glb 
*/

import React, { Suspense, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { Canvas } from '@react-three/fiber'

const NvidiaGeForceRTX3080=(props)=> {
  const { nodes, materials } = useGLTF('/pc_parts/graphic_cards/NvidiaGeForceRTX3080.glb')
  return (
    <group {...props} dispose={null}>
      <group rotation={[0, 0, 0.006]} scale={1.072}>
        <mesh geometry={nodes.NvidiaGeForceRTX3080_1.geometry} material={materials.darkgrey} />
        <mesh geometry={nodes.NvidiaGeForceRTX3080_2.geometry} material={materials['RTX3090 front']} />
        <mesh geometry={nodes.NvidiaGeForceRTX3080_3.geometry} material={materials.RTX3090back} />
        <mesh geometry={nodes.NvidiaGeForceRTX3080_4.geometry} material={materials.RTX3090top} />
        <mesh geometry={nodes.NvidiaGeForceRTX3080_5.geometry} material={materials.RTX3090bottom} />
        <mesh geometry={nodes.NvidiaGeForceRTX3080_6.geometry} material={materials.RTX3080front} />
        <mesh geometry={nodes.NvidiaGeForceRTX3080_7.geometry} material={materials.GraphicsCardSocket} />
        <mesh geometry={nodes.NvidiaGeForceRTX3080_8.geometry} material={materials.MetallicGrey} />
      </group>
    </group>
  )
}

const NvidiaGeForceRTX3080Canvas=()=>{
  return(
    <Canvas
      camera={{fov: 12}}>
        <Suspense>
          <ambientLight intensity={2} color={"white"}/>
          <NvidiaGeForceRTX3080/>
        </Suspense>
    </Canvas>
  )
}

useGLTF.preload('/pc_parts/graphic_cards/NvidiaGeForceRTX3080.glb')

export default NvidiaGeForceRTX3080Canvas