/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 NvidiaGeForceRTX3070.glb 
*/

import React, { Suspense, useRef } from 'react'
import { OrbitControls, useGLTF } from '@react-three/drei'
import { Canvas } from '@react-three/fiber'

const NvidiaGeForceRTX3070 =(props)=> {
  const { nodes, materials } = useGLTF('/pc_parts/graphic_cards/NvidiaGeForceRTX3070.glb')
  return (
    <group {...props} dispose={null}>
      <group position={[-0.184, 0, 0]} rotation={[0, 0, 0.006]} scale={0.972}>
        <mesh geometry={nodes.NvidiaGeForceRTX3070_1.geometry} material={materials.darkgrey} />
        <mesh geometry={nodes.NvidiaGeForceRTX3070_2.geometry} material={materials['RTX3090 front']} />
        <mesh geometry={nodes.NvidiaGeForceRTX3070_3.geometry} material={materials.RTX3090top} />
        <mesh geometry={nodes.NvidiaGeForceRTX3070_4.geometry} material={materials.RTX3090back} />
        <mesh geometry={nodes.NvidiaGeForceRTX3070_5.geometry} material={materials.RTX3090bottom} />
        <mesh geometry={nodes.NvidiaGeForceRTX3070_6.geometry} material={materials.MetallicGrey} />
        <mesh geometry={nodes.NvidiaGeForceRTX3070_7.geometry} material={materials['RTX3070 front']} />
        <mesh geometry={nodes.NvidiaGeForceRTX3070_8.geometry} material={materials.GraphicsCardSocket2} />
      </group>
    </group>
  )
}

const RTX3070Canvas = () =>{
  return(
    <Canvas
      camera={{fov: 12}}>
        <Suspense>
          <ambientLight intensity={2} color={"white"}/>
          <OrbitControls/>
          <NvidiaGeForceRTX3070/>
        </Suspense>
    </Canvas>
  )
}

useGLTF.preload('/pc_parts/graphic_cards/NvidiaGeForceRTX3070.glb')

export default RTX3070Canvas